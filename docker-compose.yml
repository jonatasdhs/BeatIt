services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_PASSWORD}
    ports:
      - "1433:1433"
    networks:
      - backend
    healthcheck:
      test: CMD /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${DB_PASSWORD} -Q "SELECT 1" || exit 1
      timeout: 20s
      retries: 10
      start_period: 10s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: [ "redis-server" ]
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "-p", "6379", "PING" ]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
      - "5001:5001"
    env_file:
      - .env
    develop:
      watch:
        - action: rebuild
          path: .
    depends_on:
      - sqlserver
      - redis
    links:
      - sqlserver
      - redis
    networks:
      - backend
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

networks:
  backend:
    driver: bridge
